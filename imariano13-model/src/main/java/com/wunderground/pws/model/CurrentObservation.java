
package com.wunderground.pws.model;

import java.time.ZonedDateTime;

import org.apache.commons.lang3.builder.ToStringBuilder;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wunderground.pws.model.converter.ZonedDateTimeDynamoConverter;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)

@DynamoDBTable(tableName = "Conditions")
public class CurrentObservation {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String id;
	@JsonProperty("timestamp")
	@DynamoDBTypeConverted(converter = ZonedDateTimeDynamoConverter.class)
	private ZonedDateTime timestamp = ZonedDateTime.now();

	@JsonProperty("observation_epoch")
	@DynamoDBTypeConverted(converter = ZonedDateTimeDynamoConverter.class)
	private ZonedDateTime observationTime;
	@JsonProperty("weather")
	@DynamoDBAttribute
	private String weather;
	@JsonProperty("temp_c")
	@DynamoDBAttribute
	private Double tempC;
	@JsonProperty("relative_humidity")
	@DynamoDBAttribute
	private String relativeHumidity;
	@JsonProperty("wind_string")
	@DynamoDBAttribute
	private String windString;
	@JsonProperty("wind_dir")
	@DynamoDBAttribute
	private String windDir;
	@JsonProperty("wind_degrees")
	@DynamoDBAttribute
	private Integer windDegrees;
	@JsonProperty("wind_kph")
	@DynamoDBAttribute
	private Double windKph;
	@JsonProperty("wind_gust_kph")
	@DynamoDBAttribute
	private Double windGustKph;
	@JsonProperty("pressure_mb")
	@DynamoDBAttribute
	private Double pressureMb;
	@JsonProperty("pressure_trend")
	@DynamoDBAttribute
	private String pressureTrend;
	@JsonProperty("dewpoint_c")
	@DynamoDBAttribute
	private Integer dewpointC;
	@JsonProperty("feelslike_c")
	@DynamoDBAttribute
	private Double feelslikeC;
	@JsonProperty("solarradiation")
	@DynamoDBAttribute
	private Double solarradiation;
	@JsonProperty("UV")
	@DynamoDBAttribute
	private Double uV;
	@JsonProperty("precip_1hr_metric")
	@DynamoDBAttribute
	private Double precip1hrMetric;
	@JsonProperty("precip_today_metric")
	@DynamoDBAttribute
	private Double precipTodayMetric;
	@JsonProperty("icon")
	@DynamoDBAttribute
	private String icon;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public ZonedDateTime getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(ZonedDateTime timestamp) {
		this.timestamp = timestamp;
	}

	public ZonedDateTime getObservationTime() {
		return observationTime;
	}

	public void setObservationTime(ZonedDateTime observationTime) {
		this.observationTime = observationTime;
	}

	public String getWeather() {
		return weather;
	}

	public void setWeather(String weather) {
		this.weather = weather;
	}

	public Double getTempC() {
		return tempC;
	}

	public void setTempC(Double tempC) {
		this.tempC = tempC;
	}

	public String getRelativeHumidity() {
		return relativeHumidity;
	}

	public void setRelativeHumidity(String relativeHumidity) {
		this.relativeHumidity = relativeHumidity;
	}

	public String getWindString() {
		return windString;
	}

	public void setWindString(String windString) {
		this.windString = windString;
	}

	public String getWindDir() {
		return windDir;
	}

	public void setWindDir(String windDir) {
		this.windDir = windDir;
	}

	public Integer getWindDegrees() {
		return windDegrees;
	}

	public void setWindDegrees(Integer windDegrees) {
		this.windDegrees = windDegrees;
	}

	public Double getWindKph() {
		return windKph;
	}

	public void setWindKph(Double windKph) {
		this.windKph = windKph;
	}

	public Double getWindGustKph() {
		return windGustKph;
	}

	public void setWindGustKph(Double windGustKph) {
		this.windGustKph = windGustKph;
	}

	public Double getPressureMb() {
		return pressureMb;
	}

	public void setPressureMb(Double pressureMb) {
		this.pressureMb = pressureMb;
	}

	public String getPressureTrend() {
		return pressureTrend;
	}

	public void setPressureTrend(String pressureTrend) {
		this.pressureTrend = pressureTrend;
	}

	public Integer getDewpointC() {
		return dewpointC;
	}

	public void setDewpointC(Integer dewpointC) {
		this.dewpointC = dewpointC;
	}

	public Double getFeelslikeC() {
		return feelslikeC;
	}

	public void setFeelslikeC(Double feelslikeC) {
		this.feelslikeC = feelslikeC;
	}

	public Double getSolarradiation() {
		return solarradiation;
	}

	public void setSolarradiation(Double solarradiation) {
		this.solarradiation = solarradiation;
	}

	public Double getuV() {
		return uV;
	}

	public void setuV(Double uV) {
		this.uV = uV;
	}

	public Double getPrecip1hrMetric() {
		return precip1hrMetric;
	}

	public void setPrecip1hrMetric(Double precip1hrMetric) {
		this.precip1hrMetric = precip1hrMetric;
	}

	public Double getPrecipTodayMetric() {
		return precipTodayMetric;
	}

	public void setPrecipTodayMetric(Double precipTodayMetric) {
		this.precipTodayMetric = precipTodayMetric;
	}

	public String getIcon() {
		return icon;
	}

	public void setIcon(String icon) {
		this.icon = icon;
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}

}
