
package com.wunderground.pws.model.entities;

import java.time.ZonedDateTime;

import org.apache.commons.lang3.builder.ToStringBuilder;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.wunderground.pws.model.Time;
import com.wunderground.pws.model.converter.TimeDynamoConverter;
import com.wunderground.pws.model.converter.ZonedDateTimeDynamoConverter;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)

@DynamoDBTable(tableName = "Astronomy")
public class MoonPhase {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String id;
	@DynamoDBTypeConverted(converter = ZonedDateTimeDynamoConverter.class)
	private ZonedDateTime timestamp = ZonedDateTime.now();

	@JsonProperty("percentIlluminated")
	private Integer percentIlluminated;
	@JsonProperty("ageOfMoon")
	private Integer ageOfMoon;
	@JsonProperty("phaseofMoon")
	private String phaseofMoon;
	@JsonProperty("hemisphere")
	private String hemisphere;
	@JsonProperty("sunrise")
	@DynamoDBTypeConverted(converter = TimeDynamoConverter.class)
	private Time sunrise;
	@JsonProperty("sunset")
	@DynamoDBTypeConverted(converter = TimeDynamoConverter.class)
	private Time sunset;
	@JsonProperty("moonrise")
	@DynamoDBTypeConverted(converter = TimeDynamoConverter.class)
	private Time moonrise;
	@JsonProperty("moonset")
	@DynamoDBTypeConverted(converter = TimeDynamoConverter.class)
	private Time moonset;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public ZonedDateTime getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(ZonedDateTime timestamp) {
		this.timestamp = timestamp;
	}

	public Integer getPercentIlluminated() {
		return percentIlluminated;
	}

	public void setPercentIlluminated(Integer percentIlluminated) {
		this.percentIlluminated = percentIlluminated;
	}

	public Integer getAgeOfMoon() {
		return ageOfMoon;
	}

	public void setAgeOfMoon(Integer ageOfMoon) {
		this.ageOfMoon = ageOfMoon;
	}

	public String getPhaseofMoon() {
		return phaseofMoon;
	}

	public void setPhaseofMoon(String phaseofMoon) {
		this.phaseofMoon = phaseofMoon;
	}

	public String getHemisphere() {
		return hemisphere;
	}

	public void setHemisphere(String hemisphere) {
		this.hemisphere = hemisphere;
	}

	public Time getSunrise() {
		return sunrise;
	}

	public void setSunrise(Time sunrise) {
		this.sunrise = sunrise;
	}

	public Time getSunset() {
		return sunset;
	}

	public void setSunset(Time sunset) {
		this.sunset = sunset;
	}

	public Time getMoonrise() {
		return moonrise;
	}

	public void setMoonrise(Time moonrise) {
		this.moonrise = moonrise;
	}

	public Time getMoonset() {
		return moonset;
	}

	public void setMoonset(Time moonset) {
		this.moonset = moonset;
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}

}
